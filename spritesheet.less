/*
Sprite Sheet
Simplifies sprite sheet usage in less

Example of a sprite sheet with only one sprite area:
.icon
{
    #sprite-sheet( url( images/icon-sheet.png ) );
    .area( 0, 0, 32px, 32px );
    
    &.top-hat
    {
        .sprite( 0, 0 );
    }
    
    &.fedora
    {
        .sprite( 1, 0 );
    }
    
    &.bowler-hat
    {
        .sprite( 0, 1 );
    }
    
    &.fez
    {
        .sprite( 1, 1 );
    }
}

Example of sprite sheet with two sprite areas:
.icon
{
    #sprite-sheet( url( images/icon-sheet.png ) );

    // Define the sprite areas
    .big-hats
    {
        .area( 0, 0, 32px, 32px );
    }
    
    .small-hats
    {
        .area( 0, 32px, 16px, 16px );
    }

    &.big-top-hat
    {
        .big-hats; .sprite( 0, 0 );
    }

    &.big-fez
    {
        .big-hats; .sprite( 1, 0 );
    }

    &.big-stetson
    {
        .big-hats; .sprite( 2, 0 );
    }

    &.small-top-hat
    {
        .small-hats; .sprite( 0, 0 );
    }

    &.small-fez
    {
        .small-hats; .sprite( 1, 0 );
    }

    &.small-stetson
    {
        .small-hats; .sprite( 2, 0 );
    }
}

Example of automatic area generation:
.icon
{
    #sprite-sheet( url( images/icon-sheet.png ) );
    .generate-area( 0, 0, 32px, 32px, 4, 2 );
}

Example of automatic named sprite generation:
.icon
{
    #sprite-sheet( url( images/icon-sheet.png ) );
    @names: top-hat, fez, stenton;
    .generate-named-area( 0, 0, 32px, 32px, 2, @names );
}
*/

#sprite-sheet( @url )
{
    display: inline-block;
    background: @url;

    .sprite( @x, @y, @w, @h )
    {
        width: @w;
        height: @h;
        background-position: -@x -@y;
    }

    .area( @x, @y, @w, @h )
    {
        @area-x: @x;
        @area-y: @y;
        @sprite-width:  @w;
        @sprite-height: @h;

        .sprite( @col, @row )
        {
            .sprite(
                @area-x - @col * @sprite-width,
                @area-y - @row * @sprite-height,
                @sprite-width, @sprite-height
            );
        }
    }

    .generate-area( @x, @y, @w, @h, @cols, @rows )
    {
        .area( @x, @y, @w, @h );

        .generate-sprites( @cols, @rows, @col: 0, @row: 0 ) when ( @col < @cols ) and ( @row < @rows )
        {
            &.sprite-@{col}-@{row}
            {
                .sprite( @col, @row );
            }

            .generate-sprites( @cols, @rows, @col + 1, @row );
        }
        
        .generate-sprites( @cols, @rows, @col: 0, @row: 0 ) when ( @col >= @cols ) and ( @row < @rows )
        {
            .generate-sprites( @cols, @rows, 0, @row + 1 );
        }

        .generate-sprites( @cols, @rows );
    }

    .generate-named-area( @x, @y, @w, @h, @cols, @names )
    {
        .area( @x, @y, @w, @h );

        .generate-named-sprites( @cols, @names, @nameidx: 0 ) when ( @nameidx < length( @names ) )
        {
            @name: extract( @names, @nameidx + 1 );
            @col:  mod( @nameidx, @cols );
            @row:  floor( @nameidx / @cols );

            &.@{name}
            {
                .sprite( @col, @row );
            }

            .generate-named-sprites( @cols, @names, @nameidx + 1 );
        }

        .generate-named-sprites( @cols, @names );
    }
}